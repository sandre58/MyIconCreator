<UserControl x:Class="MyNet.IconCreator.Wpf.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="clr-namespace:MyNet.IconCreator.Wpf.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:shellVm="clr-namespace:MyNet.IconCreator.Wpf.ViewModels"
             xmlns:sys="clr-namespace:System;assembly=netstandard"
             xmlns:views="clr-namespace:MyNet.IconCreator.Wpf.Views"
             d:DataContext="{d:DesignInstance Type=shellVm:MainViewModel}"
             my:ViewModelAssist.AutoWire="True"
             mc:Ignorable="d">
    <UserControl.Resources>
        <sys:Double x:Key="MyNet.IconCreator.Width.ToolBarItem">69</sys:Double>
    </UserControl.Resources>

    <DockPanel>

        <Grid Panel.ZIndex="1" DockPanel.Dock="Top">

            <!--  Shadow  -->
            <Border Margin="0 10 0 0" Background="{DynamicResource MyNet.Brushes.Application.Background}" Effect="{DynamicResource MyNet.Shadows.Elevation2}" />

            <!--  ToolBar  -->
            <ToolBar my:ElevationAssist.Elevation="Dp0" Background="{DynamicResource MyNet.Brushes.Application.Background}" DockPanel.Dock="Top">

                <!--  Generation  -->
                <GroupBox Header="{my:Resource Generate}">
                    <StackPanel Orientation="Horizontal">
                        <Button Width="{StaticResource MyNet.IconCreator.Width.ToolBarItem}"
                                my:IconAssist.Icon="{my:LargeIcon Kind=FileImage}"
                                Command="{Binding GenerateImageCommand}"
                                CommandParameter="{Binding ElementName=icon}"
                                Content="{my:Resource Image}" />
                        <Button Width="{StaticResource MyNet.IconCreator.Width.ToolBarItem}"
                                my:IconAssist.Icon="{my:LargeIcon Kind=ImageMinus}"
                                Command="{Binding GenerateIconCommand}"
                                CommandParameter="{Binding ElementName=icon}"
                                Content="{my:Resource Icon}" />
                    </StackPanel>
                </GroupBox>

                <Separator />

                <!--  Icon  -->
                <GroupBox Header="{my:Resource Icon}">
                    <ToggleButton Width="{StaticResource MyNet.IconCreator.Width.ToolBarItem}"
                                  my:IconAssist.Icon="{my:LargeIcon Kind=PuzzleEdit}"
                                  Content="{my:Resource Choose}"
                                  IsChecked="{Binding ShowIconsList}" />
                </GroupBox>

                <Separator />

                <!--  Text  -->
                <GroupBox Header="{my:Resource Text}">
                    <StackPanel Orientation="Horizontal">
                        <ToggleButton Width="{StaticResource MyNet.IconCreator.Width.ToolBarItem}"
                                      my:IconAssist.Icon="{my:LargeIcon Kind=FormatTextbox}"
                                      Content="{my:Resource Show}"
                                      IsChecked="{Binding ShowText}" />
                        <TextBox Style="{StaticResource MyNet.Styles.TextBox.Outlined}"
                                 Width="{StaticResource MyNet.IconCreator.Width.ToolBarItem}"
                                 Margin="{StaticResource MyNet.Margins.Small}"
                                 Padding="3"
                                 VerticalAlignment="Stretch"
                                 VerticalContentAlignment="Center"
                                 FontSize="20"
                                 Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}"
                                 TextAlignment="Center" />
                        <DockPanel>
                            <ComboBox Padding="{StaticResource MyNet.Margins.Default}"
                                      HorizontalContentAlignment="Stretch"
                                      DisplayMemberPath="DisplayName.Value"
                                      DockPanel.Dock="Top"
                                      ItemsSource="{Binding FontFamilies}"
                                      SelectedValue="{Binding FontFamily}"
                                      SelectedValuePath="Item">
                                <ComboBox.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource MyNet.Styles.ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
                                        <Setter Property="FontFamily" Value="{Binding Item}" />
                                        <Setter Property="ToolTip" Value="{Binding DisplayName.Value}" />
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                            <StackPanel Orientation="Horizontal">
                                <ToggleButton Width="26"
                                              Height="26"
                                              Content="{my:ToolIcon Kind=FormatBold}"
                                              IsChecked="{Binding IsBold}"
                                              ToolTip="{my:Resource Bold}" />
                                <ToggleButton Width="26"
                                              Height="26"
                                              Content="{my:ToolIcon Kind=FormatItalic}"
                                              IsChecked="{Binding IsItalic}"
                                              ToolTip="{my:Resource Italic}" />
                                <ComboBox Style="{StaticResource MyNet.Styles.ComboBox.Numeric}"
                                          Width="64"
                                          Margin="{StaticResource MyNet.Margins.Small}"
                                          VerticalAlignment="Center"
                                          my:TextFieldAssist.PreviousCommand="{Binding FontSizeDownCommand}"
                                          my:ComboBoxAssist.ShowDropDownPopup="True"
                                          my:TextFieldAssist.NextCommand="{Binding FontSizeUpCommand}"
                                          ItemsSource="{Binding FontSizes}"
                                          Text="{Binding FontSize, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>
                        </DockPanel>
                    </StackPanel>
                </GroupBox>

                <Separator />

                <!--  Size  -->
                <GroupBox Header="{my:Resource Layout}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <my:NumericUpDown Width="100"
                                          my:HintAssist.Hint="{my:Resource Width}"
                                          my:IconAssist.Icon="{my:Icon Kind=ArrowLeftRight}"
                                          Maximum="1000"
                                          Minimum="1"
                                          Value="{Binding Width}" />
                        <my:NumericUpDown Grid.Row="1"
                                          Width="100"
                                          my:HintAssist.Hint="{my:Resource Height}"
                                          my:IconAssist.Icon="{my:Icon Kind=ArrowUpDown}"
                                          Maximum="1000"
                                          Minimum="2"
                                          Value="{Binding Height}" />
                        <my:NumericUpDown Grid.Row="0"
                                          Grid.Column="1"
                                          Width="100"
                                          my:HintAssist.Hint="{my:Resource IconSize}"
                                          my:IconAssist.Icon="{my:Icon Kind=ArrowExpandVertical}"
                                          Maximum="1000"
                                          Minimum="0"
                                          Value="{Binding IconSize}" />
                        <my:NumericUpDown Grid.Row="1"
                                          Grid.Column="1"
                                          Width="100"
                                          my:HintAssist.Hint="{my:Resource TextSize}"
                                          my:IconAssist.Icon="{my:Icon Kind=FormatLineHeight}"
                                          Maximum="500"
                                          Minimum="0"
                                          Value="{Binding TextSize}" />
                        <my:NumericUpDown Grid.Row="0"
                                          Grid.Column="2"
                                          Width="100"
                                          my:HintAssist.Hint="{my:Resource CornerRadius}"
                                          my:IconAssist.Icon="{my:Icon Kind=BorderRadius}"
                                          Maximum="1000"
                                          Minimum="0"
                                          Value="{Binding CornerRadius}" />
                        <my:NumericUpDown Grid.Row="0"
                                          Grid.Column="3"
                                          Width="100"
                                          my:HintAssist.Hint="{my:Resource OffsetX}"
                                          my:IconAssist.Icon="{my:Icon Kind=ArrowExpandRight}"
                                          Maximum="1000"
                                          Minimum="-100"
                                          Value="{Binding OffsetX}" />
                        <my:NumericUpDown Grid.Row="1"
                                          Grid.Column="3"
                                          Width="100"
                                          my:HintAssist.Hint="{my:Resource OffsetY}"
                                          my:IconAssist.Icon="{my:Icon Kind=ArrowExpandDown}"
                                          Maximum="1000"
                                          Minimum="-100"
                                          Value="{Binding OffsetY}" />
                    </Grid>
                </GroupBox>

                <Separator />

                <!--  Colors  -->
                <GroupBox Header="{my:Resource Icon}">
                    <StackPanel>
                        <my:ColorPicker Width="120"
                                        my:HintAssist.Hint="{my:Resource Background}"
                                        my:IconAssist.Icon="{my:Icon Kind=FormatColorFill}"
                                        SelectedColor="{Binding BackgroundColor}" />
                        <my:ColorPicker Width="120"
                                        my:HintAssist.Hint="{my:Resource Foreground}"
                                        my:IconAssist.Icon="{my:Icon Kind=FormatColorText}"
                                        SelectedColor="{Binding ForegroundColor}" />
                    </StackPanel>
                </GroupBox>

                <ToggleButton Width="{StaticResource MyNet.IconCreator.Width.ToolBarItem}"
                              my:IconAssist.Icon="{my:LargeIcon Kind=InvertColors}"
                              Content="{my:Resource SeparateColors}"
                              IsChecked="{Binding SeparateColors}" />

                <GroupBox Header="{my:Resource Text}" Visibility="{Binding SeparateColors, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}">
                    <StackPanel>
                        <my:ColorPicker Width="120"
                                        my:HintAssist.Hint="{my:Resource Background}"
                                        my:IconAssist.Icon="{my:Icon Kind=FormatColorFill}"
                                        SelectedColor="{Binding TextBackgroundColor}" />
                        <my:ColorPicker Width="120"
                                        my:HintAssist.Hint="{my:Resource Foreground}"
                                        my:IconAssist.Icon="{my:Icon Kind=FormatColorText}"
                                        SelectedColor="{Binding TextForegroundColor}" />
                    </StackPanel>
                </GroupBox>
            </ToolBar>
        </Grid>

        <my:DrawerHost IsLeftDrawerOpen="{Binding ShowIconsList}">

            <!--  Icons  -->
            <my:DrawerHost.LeftDrawerContent>
                <views:IconSelectionView Width="435" DataContext="{Binding IconSelectionViewModel}" />
            </my:DrawerHost.LeftDrawerContent>

            <Border Background="{DynamicResource MyNet.Brushes.Application.Background.Secondary}">
                <Border HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        BorderBrush="{DynamicResource MyNet.Brushes.Control.Border}"
                        BorderThickness="1">
                    <Border x:Name="icon" Width="{Binding Width}" Height="{Binding Height}">

                        <my:ApplicationIcon Background="{Binding BackgroundColor, Converter={x:Static my:BrushConverter.Default}}"
                                            Data="{Binding IconSelectionViewModel.SelectedData, Converter={x:Static my:StringToGeometryConverter.Default}, Mode=OneWay}"
                                            FontFamily="{Binding FontFamily}"
                                            FontSize="{Binding FontSize}"
                                            Foreground="{Binding ForegroundColor, Converter={x:Static my:BrushConverter.Default}}"
                                            IconSize="{Binding IconSize}"
                                            OffsetX="{Binding OffsetX}"
                                            OffsetY="{Binding OffsetY}"
                                            ShowText="{Binding ShowText}"
                                            Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}"
                                            TextSize="{Binding TextSize}"
                                            UniformCornerRadius="{Binding CornerRadius}">
                            <my:ApplicationIcon.Margin>
                                <MultiBinding Converter="{x:Static c:ApplicationIconMarginConverter.Default}">
                                    <Binding Path="OffsetX" />
                                    <Binding Path="OffsetY" />
                                </MultiBinding>
                            </my:ApplicationIcon.Margin>
                            <my:ApplicationIcon.Style>
                                <Style BasedOn="{StaticResource {x:Type my:ApplicationIcon}}" TargetType="{x:Type my:ApplicationIcon}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsItalic}" Value="True">
                                            <Setter Property="FontStyle" Value="Italic" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsBold}" Value="True">
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SeparateColors}" Value="True">
                                            <Setter Property="TextBackground" Value="{Binding TextBackgroundColor, Converter={x:Static my:BrushConverter.Default}}" />
                                            <Setter Property="TextForeground" Value="{Binding TextForegroundColor, Converter={x:Static my:BrushConverter.Default}}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </my:ApplicationIcon.Style>
                        </my:ApplicationIcon>
                    </Border>
                </Border>
            </Border>

        </my:DrawerHost>
    </DockPanel>
</UserControl>
