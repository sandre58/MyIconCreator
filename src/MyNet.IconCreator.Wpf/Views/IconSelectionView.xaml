<UserControl x:Class="MyNet.IconCreator.Views.IconSelectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:my="http://mynet.com/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewmodels="clr-namespace:MyNet.IconCreator.ViewModels"
             d:DataContext="{d:DesignInstance Type=viewmodels:IconSelectionViewModel}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <DockPanel>

        <Grid Margin="{StaticResource MyNet.Margins.Medium}" DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <RadioButton Style="{StaticResource MyNet.Styles.ToggleButton.Icon}"
                         Grid.Column="0"
                         Content="{my:MediumIcon Kind=Edit}"
                         IsChecked="{Binding ShowOtherData}" />
            <RadioButton Style="{StaticResource MyNet.Styles.ToggleButton.Icon}"
                         Grid.Column="2"
                         Content="{my:MediumIcon Kind=ViewComfy}"
                         IsChecked="{Binding ShowOtherData, Converter={x:Static my:NotBooleanConverter.Default}}" />
            <TextBox x:Name="SearchBox"
                     Style="{StaticResource MyNet.Styles.TextBox.Outlined}"
                     Grid.Column="4"
                     HorizontalAlignment="Stretch"
                     my:HintAssist.Hint="{my:Resource Search}"
                     my:IconAssist.Icon="{my:Icon Kind=Search}"
                     my:TextFieldAssist.HasClearButton="True"
                     Text="{Binding IconsListViewModel.Filters.Value, Delay=50, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Visibility="{Binding ShowOtherData, Converter={x:Static my:BooleanToVisibilityConverter.HiddenIfTrue}}" />
        </Grid>

        <ListBox Style="{StaticResource MyNet.Styles.ListBox.Cards}"
                 Grid.Row="1"
                 Grid.Column="0"
                 Margin="{StaticResource MyNet.Margins.Default}"
                 ItemsSource="{Binding IconsListViewModel.Wrappers}"
                 SelectionMode="Single"
                 VirtualizingPanel.CacheLengthUnit="Pixel"
                 Visibility="{Binding ShowOtherData, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfTrue}}">
            <ListBox.ItemContainerStyle>
                <Style BasedOn="{StaticResource MyNet.Styles.ListBoxItem.Card}" TargetType="{x:Type ListBoxItem}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                    <Setter Property="ToolTip" Value="{Binding Item.Name, Mode=OneTime}" />
                    <Setter Property="Height" Value="60" />
                    <Setter Property="Width" Value="60" />
                    <Setter Property="Margin" Value="{StaticResource MyNet.Margins.Default}" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Viewbox Height="35">
                        <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding Item.Icon}" />
                    </Viewbox>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <TextBox Style="{StaticResource MyNet.Styles.TextBox.Outlined}"
                 Grid.Row="1"
                 Margin="{StaticResource MyNet.Margins.Medium}"
                 HorizontalAlignment="Stretch"
                 VerticalAlignment="Stretch"
                 VerticalContentAlignment="Top"
                 AcceptsReturn="True"
                 AcceptsTab="True"
                 Background="Transparent"
                 Text="{Binding OtherData}"
                 Visibility="{Binding ShowOtherData, Converter={x:Static my:BooleanToVisibilityConverter.CollapsedIfFalse}}" />

    </DockPanel>

</UserControl>
